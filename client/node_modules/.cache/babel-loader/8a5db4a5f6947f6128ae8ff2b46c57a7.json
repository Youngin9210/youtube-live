{"ast":null,"code":"var db = require(\"../models\"); // Defining methods for the postsController\n\n\nmodule.exports = {\n  findAll: function findAll(req, res) {\n    db.Post.find(req.query).sort({\n      date: -1\n    }).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  findById: function findById(req, res) {\n    db.Post.findById(req.params.id).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  create: function create(req, res) {\n    db.Post.create(req.body).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  update: function update(req, res) {\n    db.Post.findOneAndUpdate({\n      _id: req.params.id\n    }, req.body).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  remove: function remove(req, res) {\n    db.Post.findById({\n      _id: req.params.id\n    }).then(function (dbModel) {\n      return dbModel.remove();\n    }).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  }\n};","map":{"version":3,"sources":["/Users/moager/Desktop/Bootcamp/Homework/youtube-live/controllers/postsController.js"],"names":["db","require","module","exports","findAll","req","res","Post","find","query","sort","date","then","dbModel","json","catch","err","status","findById","params","id","create","body","update","findOneAndUpdate","_id","remove"],"mappings":"AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,WAAD,CAAlB,C,CAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,OAAO,EAAE,iBAASC,GAAT,EAAcC,GAAd,EAAmB;AAC1BN,IAAAA,EAAE,CAACO,IAAH,CAAQC,IAAR,CAAaH,GAAG,CAACI,KAAjB,EACGC,IADH,CACQ;AAAEC,MAAAA,IAAI,EAAE,CAAC;AAAT,KADR,EAEGC,IAFH,CAEQ,UAAAC,OAAO;AAAA,aAAIP,GAAG,CAACQ,IAAJ,CAASD,OAAT,CAAJ;AAAA,KAFf,EAGGE,KAHH,CAGS,UAAAC,GAAG;AAAA,aAAIV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CAAJ;AAAA,KAHZ;AAID,GANc;AAOfE,EAAAA,QAAQ,EAAE,kBAASb,GAAT,EAAcC,GAAd,EAAmB;AAC3BN,IAAAA,EAAE,CAACO,IAAH,CAAQW,QAAR,CAAiBb,GAAG,CAACc,MAAJ,CAAWC,EAA5B,EACGR,IADH,CACQ,UAAAC,OAAO;AAAA,aAAIP,GAAG,CAACQ,IAAJ,CAASD,OAAT,CAAJ;AAAA,KADf,EAEGE,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CAAJ;AAAA,KAFZ;AAGD,GAXc;AAYfK,EAAAA,MAAM,EAAE,gBAAShB,GAAT,EAAcC,GAAd,EAAmB;AACzBN,IAAAA,EAAE,CAACO,IAAH,CAAQc,MAAR,CAAehB,GAAG,CAACiB,IAAnB,EACGV,IADH,CACQ,UAAAC,OAAO;AAAA,aAAIP,GAAG,CAACQ,IAAJ,CAASD,OAAT,CAAJ;AAAA,KADf,EAEGE,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CAAJ;AAAA,KAFZ;AAGD,GAhBc;AAiBfO,EAAAA,MAAM,EAAE,gBAASlB,GAAT,EAAcC,GAAd,EAAmB;AACzBN,IAAAA,EAAE,CAACO,IAAH,CAAQiB,gBAAR,CAAyB;AAAEC,MAAAA,GAAG,EAAEpB,GAAG,CAACc,MAAJ,CAAWC;AAAlB,KAAzB,EAAiDf,GAAG,CAACiB,IAArD,EACGV,IADH,CACQ,UAAAC,OAAO;AAAA,aAAIP,GAAG,CAACQ,IAAJ,CAASD,OAAT,CAAJ;AAAA,KADf,EAEGE,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CAAJ;AAAA,KAFZ;AAGD,GArBc;AAsBfU,EAAAA,MAAM,EAAE,gBAASrB,GAAT,EAAcC,GAAd,EAAmB;AACzBN,IAAAA,EAAE,CAACO,IAAH,CAAQW,QAAR,CAAiB;AAAEO,MAAAA,GAAG,EAAEpB,GAAG,CAACc,MAAJ,CAAWC;AAAlB,KAAjB,EACGR,IADH,CACQ,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACa,MAAR,EAAJ;AAAA,KADf,EAEGd,IAFH,CAEQ,UAAAC,OAAO;AAAA,aAAIP,GAAG,CAACQ,IAAJ,CAASD,OAAT,CAAJ;AAAA,KAFf,EAGGE,KAHH,CAGS,UAAAC,GAAG;AAAA,aAAIV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqBE,GAArB,CAAJ;AAAA,KAHZ;AAID;AA3Bc,CAAjB","sourcesContent":["const db = require(\"../models\");\n\n// Defining methods for the postsController\nmodule.exports = {\n  findAll: function(req, res) {\n    db.Post.find(req.query)\n      .sort({ date: -1 })\n      .then(dbModel => res.json(dbModel))\n      .catch(err => res.status(422).json(err));\n  },\n  findById: function(req, res) {\n    db.Post.findById(req.params.id)\n      .then(dbModel => res.json(dbModel))\n      .catch(err => res.status(422).json(err));\n  },\n  create: function(req, res) {\n    db.Post.create(req.body)\n      .then(dbModel => res.json(dbModel))\n      .catch(err => res.status(422).json(err));\n  },\n  update: function(req, res) {\n    db.Post.findOneAndUpdate({ _id: req.params.id }, req.body)\n      .then(dbModel => res.json(dbModel))\n      .catch(err => res.status(422).json(err));\n  },\n  remove: function(req, res) {\n    db.Post.findById({ _id: req.params.id })\n      .then(dbModel => dbModel.remove())\n      .then(dbModel => res.json(dbModel))\n      .catch(err => res.status(422).json(err));\n  }\n};\n"]},"metadata":{},"sourceType":"script"}